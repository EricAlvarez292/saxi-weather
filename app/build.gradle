plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
}
apply plugin: 'kotlin-kapt'

def apikeyPropertiesFile = file("../apikey.properties")
def apikeyProperties = new Properties()
apikeyProperties.load( new FileInputStream(apikeyPropertiesFile))

android {
    compileSdk 33

    defaultConfig {
        applicationId "com.saxipapsi.weathermap"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        getByName("debug") {
//            signingConfig = signingConfigs.getByName("debug")
        }
        getByName("release") {
            minifyEnabled false
//            signingConfig = signingConfigs.getByName("release")
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    flavorDimensions("environment")
    productFlavors {
        create("production") {
            dimension = "environment"
            resValue("string", "app_name", "WeatherMap")
            def insiderPartnerName = "weathermapprod"
            buildConfigField("String", "INSIDER_PARTNER_NAME", "\"$insiderPartnerName\"")
            manifestPlaceholders["partner"] = insiderPartnerName

            def weatherKey = apikeyProperties["weatherApiKey"] as String
            resValue("string", "weather_api_key", weatherKey)

            //verification
            buildConfigField("String", "VERIFICATION_APP_PACKAGE", "\"com.saxipapsi.weathermap\"")
        }
        create("dev") {
            dimension = "environment"
            resValue("string", "app_name", "WeatherMap Dev")
            applicationIdSuffix = ".dev"
            def insiderPartnerName = "weatheruat"
            buildConfigField("String", "INSIDER_PARTNER_NAME", "\"$insiderPartnerName\"")
            manifestPlaceholders["partner"] = insiderPartnerName

            def weatherKey = apikeyProperties["weatherApiDebugKey"] as String
            resValue("string", "weather_api_key", weatherKey)

            //verification
            buildConfigField("String", "VERIFICATION_APP_PACKAGE", "\"com.saxipapsi.weathermap.dev\"")
        }
        create("staging") {
            dimension = "environment"
            resValue("string", "app_name", "WeatherMap Staging")
            applicationIdSuffix = ".staging"
            def insiderPartnerName = "weatheruat"
            buildConfigField("String", "INSIDER_PARTNER_NAME", "\"$insiderPartnerName\"")
            manifestPlaceholders["partner"] = insiderPartnerName

            def weatherKey = apikeyProperties["weatherApiDebugKey"] as String
            resValue("string", "weather_api_key", weatherKey)

            //verification
            buildConfigField("String", "VERIFICATION_APP_PACKAGE", "\"com.saxipapsi.weathermap.staging\"")
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.6.0'
    implementation 'androidx.navigation:navigation-ui-ktx:2.6.0'

    // Compose dependencies
    //implementation "androidx.lifecycle:lifecycle-viewmodel-compose:2.6.1"
    //implementation "androidx.navigation:navigation-compose:2.7.0-beta01"
    //implementation "com.google.accompanist:accompanist-flowlayout:0.17.0"

    /*Google*/
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'com.google.android.gms:play-services-maps:18.1.0'
    implementation("com.google.android.gms:play-services-location:21.0.1")

    /*Retrofit*/
    def retrofit_version = "2.9.0"
    implementation("com.squareup.retrofit2:retrofit:$retrofit_version")
    implementation("com.squareup.retrofit2:converter-gson:$retrofit_version")
    def okhttp_version = "4.10.0"
    implementation("com.squareup.okhttp3:okhttp:$okhttp_version")
    implementation("com.squareup.okhttp3:logging-interceptor:$okhttp_version")

    /*Koin DI*/
    def koin_version = "3.2.0"
    implementation("io.insert-koin:koin-core:$koin_version")
    implementation("io.insert-koin:koin-android:$koin_version")

    // Coroutines
    def coroutine_version = "1.6.4"
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutine_version")

    // Coroutines life cycle scope
    def coroutine_lifecycle_version = "2.6.1"
    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:$coroutine_lifecycle_version")
    implementation("androidx.lifecycle:lifecycle-livedata-ktx:$coroutine_lifecycle_version")
    implementation("androidx.lifecycle:lifecycle-process:$coroutine_lifecycle_version")
    implementation("androidx.lifecycle:lifecycle-runtime-ktx:$coroutine_lifecycle_version")

    // Room components
    def room_version = "2.5.2"
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    //annotationProcessor "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-guava:$room_version"
    //optional - Guava support for Room, including Optional and ListenableFuture
    implementation "androidx.room:room-paging:$room_version"//optional - Paging 3 Integration
    testImplementation "androidx.room:room-testing:$room_version"//optional - Test helpers

    /*Image*/
    implementation 'com.github.bumptech.glide:glide:4.15.1'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation ("androidx.test.espresso:espresso-core:3.5.1"){
        exclude module: "protobuf-lite"
    }


    testImplementation("app.cash.turbine:turbine:0.7.0")
    testImplementation("org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4")
}

